:root {
  /* value set in `addAccentColors.ts */
  /* --btd-accent-color:; */
}

.column-header-link,
.app-nav-link,
.app-nav-tab,
.app-search-fake {
  color: var(--btd-accent-color) !important;
}

:matches(html, html.dark) a,
:matches(html, html.dark) a:focus,
:matches(html, html.dark) a:hover,
:matches(html, html.dark) a:active,
:matches(html, html.dark) .color-twitter-blue,
:matches(html, html.dark) .other-replies-link,
:matches(html, html.dark) .other-replies-link:hover,
.facet-subtitle {
  color: var(--btd-accent-color);
}

:matches(html, html.dark) .Button,
:matches(html, html.dark) .Button.is-visited,
:matches(html, html.dark) .Button:visited,
:matches(html, html.dark) button,
:matches(html, html.dark) button.is-visited,
:matches(html, html.dark) button:visited,
:matches(html, html.dark) input.is-visited[type='button'],
:matches(html, html.dark) input:visited[type='button'],
:matches(html, html.dark) input[type='button'] {
  border-color: var(--btd-accent-color);
  color: var(--btd-accent-color);
}

button.btn-on-dark,
input[type='button'].btn-on-dark {
  color: var(--btd-accent-color);
  background: transparent;
}

:matches(html, html.dark) .dropdown-menu .is-selected,
.lst-group .selected {
  background-color: var(--btd-accent-color) !important;
}

:matches(html, html.dark) .Button.btn-fav.s-favorited,
:matches(html, html.dark) .Button.btn-fav.s-favorited:visited,
:matches(html, html.dark) .Button.Button--primary,
:matches(html, html.dark) .Button.Button--primary:visited,
:matches(html, html.dark) .ButtonGroup--primary > .Button,
:matches(html, html.dark) .ButtonGroup--primary > .Button:visited,
:matches(html, html.dark) .ButtonGroup--primary > .ButtonGroup > .Button,
:matches(html, html.dark) .ButtonGroup--primary > .ButtonGroup > .Button:visited,
:matches(html, html.dark) .ButtonGroup--primary > .ButtonGroup > button,
:matches(html, html.dark) .ButtonGroup--primary > .ButtonGroup > button:visited,
:matches(html, html.dark) .ButtonGroup--primary > .ButtonGroup > input:visited[type='button'],
:matches(html, html.dark) .ButtonGroup--primary > .ButtonGroup > input[type='button'],
:matches(html, html.dark) .ButtonGroup--primary > button,
:matches(html, html.dark) .ButtonGroup--primary > button:visited,
:matches(html, html.dark) .ButtonGroup--primary > input:visited[type='button'],
:matches(html, html.dark) .ButtonGroup--primary > input[type='button'],
:matches(html, html.dark) .s-following .follow-btn:hover .Button.following-text,
:matches(html, html.dark) .s-following .follow-btn:hover .Button.following-text:visited,
:matches(html, html.dark) .s-following .follow-btn:hover button.following-text,
:matches(html, html.dark) .s-following .follow-btn:hover button.following-text:visited,
:matches(html, html.dark) .s-following .follow-btn:hover input.following-text:visited[type='button'],
:matches(html, html.dark) .s-following .follow-btn:hover input.following-text[type='button'],
:matches(html, html.dark) button.btn-fav.s-favorited,
:matches(html, html.dark) button.btn-fav.s-favorited:visited,
:matches(html, html.dark) button.Button--primary,
:matches(html, html.dark) button.Button--primary:visited,
:matches(html, html.dark) input.btn-fav.s-favorited:visited[type='button'],
:matches(html, html.dark) input.btn-fav.s-favorited[type='button'],
:matches(html, html.dark) input.Button--primary:visited[type='button'],
:matches(html, html.dark) input.Button--primary[type='button'] {
  background-color: var(--btd-accent-color) !important;
  border: none !important;
}

.Button.btn-fav.s-favorited:hover,
.Button.Button--primary.is-hover,
.Button.Button--primary:hover,
.Button.is-hover.btn-fav.s-favorited,
.ButtonGroup--primary > .Button.is-hover,
.ButtonGroup--primary > .Button:hover,
.ButtonGroup--primary > .ButtonGroup > .Button.is-hover,
.ButtonGroup--primary > .ButtonGroup > .Button:hover,
.ButtonGroup--primary > .ButtonGroup > button.is-hover,
.ButtonGroup--primary > .ButtonGroup > button:hover,
.ButtonGroup--primary > .ButtonGroup > input.is-hover[type='button'],
.ButtonGroup--primary > .ButtonGroup > input:hover[type='button'],
.ButtonGroup--primary > button.is-hover,
.ButtonGroup--primary > button:hover,
.ButtonGroup--primary > input.is-hover[type='button'],
.ButtonGroup--primary > input:hover[type='button'],
.s-following .follow-btn:hover .Button.following-text:hover,
.s-following .follow-btn:hover .Button.is-hover.following-text,
.s-following .follow-btn:hover button.following-text:hover,
.s-following .follow-btn:hover button.is-hover.following-text,
.s-following .follow-btn:hover input.following-text:hover[type='button'],
.s-following .follow-btn:hover input.is-hover.following-text[type='button'],
button.btn-fav.s-favorited:hover,
button.Button--primary.is-hover,
button.Button--primary:hover,
button.is-hover.btn-fav.s-favorited,
input.btn-fav.s-favorited:hover[type='button'],
input.Button--primary.is-hover[type='button'],
input.Button--primary:hover[type='button'],
input.is-hover.btn-fav.s-favorited[type='button'],
.lst-group .selected a:hover {
  background-color: var(--btd-accent-color) !important;
  background-image: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)) !important;
}

.app-search-fake {
  border-color: var(--btd-accent-color) !important;
}

/* Re-set the color of the button to hide the drawer */
html[class] .js-hide-drawer.Button.tweet-button,
html[class] .js-hide-drawer.Button.tweet-button:hover {
  background-image: none !important;
  color: white;
  background: #3d5466 !important;
}
